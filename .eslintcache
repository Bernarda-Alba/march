[{"/Users/seeyonglee/my_own_project/kapable/personality-test/src/App.js":"1","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Result.js":"2","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Quiz.js":"3","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Question.js":"4","/Users/seeyonglee/my_own_project/kapable/personality-test/src/index.js":"5","/Users/seeyonglee/my_own_project/kapable/personality-test/src/reportWebVitals.js":"6","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/MainPage.js":"7","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ResultToIntro.js":"8","/Users/seeyonglee/my_own_project/kapable/personality-test/src/api/TESTS.js":"9","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Intro.js":"10","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Loading.js":"11","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/QuestionCount.js":"12","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ScrollToTop.js":"13","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/BirthdayCalc.js":"14"},{"size":6260,"mtime":1610332148755,"results":"15","hashOfConfig":"16"},{"size":5235,"mtime":1609931002685,"results":"17","hashOfConfig":"16"},{"size":4184,"mtime":1609302679789,"results":"18","hashOfConfig":"16"},{"size":280,"mtime":1609826662541,"results":"19","hashOfConfig":"16"},{"size":597,"mtime":1609868293886,"results":"20","hashOfConfig":"16"},{"size":362,"mtime":1609818205821,"results":"21","hashOfConfig":"16"},{"size":1235,"mtime":1609905246453,"results":"22","hashOfConfig":"16"},{"size":1622,"mtime":1609931008671,"results":"23","hashOfConfig":"16"},{"size":84343,"mtime":1610365350874,"results":"24","hashOfConfig":"16"},{"size":10642,"mtime":1610363402946,"results":"25","hashOfConfig":"16"},{"size":600,"mtime":1608637825624,"results":"26","hashOfConfig":"16"},{"size":605,"mtime":1608700393134,"results":"27","hashOfConfig":"16"},{"size":333,"mtime":1610284728847,"results":"28","hashOfConfig":"16"},{"size":4949,"mtime":1610370902302,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"136bu7d",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seeyonglee/my_own_project/kapable/personality-test/src/App.js",["61"],"import React, { Component, Fragment } from 'react';\nimport MainPage from './components/MainPage';\nimport Intro from './components/Intro'\nimport ResultToIntro from './components/ResultToIntro'\nimport ScrollToTop from './components/ScrollToTop'\nimport TESTS from './api/TESTS'\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport Result from './components/Result';\nimport ScriptTag from 'react-script-tag'\nimport { Helmet } from 'react-helmet';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    let i = 0;\n    let _all_tests_url = [];\n    while (i<TESTS.length) {\n      _all_tests_url.push('/'+TESTS[i].info.mainUrl+'/')\n      i = i + 1;\n    }\n    let j = 0;\n    let _all_tests_result_url = [];\n    while (j<_all_tests_url.length){\n      _all_tests_result_url.push(_all_tests_url[j]+'result/')\n      j = j + 1;\n    }\n    let _final_render_routes = [];\n    var k = 0;\n    \n    while(k<TESTS.length){\n      var l=  0;\n      while(l<TESTS[k].results.length){\n        _final_render_routes.push([TESTS[k].results[l].query, TESTS[k].info.mainUrl])\n        l = l + 1;\n      }\n      k = k + 1;\n    }\n    this.state = {\n      result_route:'result/',\n      all_tests_url:_all_tests_url,\n      all_tests_result_url:_all_tests_result_url,\n      final_render_routes:_final_render_routes,\n    }\n  }\n\n  reloadPage() { \n    var currentDocumentTimestamp = new Date(performance.timing.domLoading).getTime();\n    var now = Date.now(); \n    var tenSec = 10 * 1000;\n    var plusTenSec = currentDocumentTimestamp + tenSec;\n    if (now > plusTenSec) { window.location.reload(); } else {}\n  }\n\n  render() {\n    return(\n    <Fragment>\n      <Helmet>\n        {/* <!-- Primary Meta Tags --> */}\n        <title>취향 분석 테스트</title>\n        <meta name=\"title\" content=\"취향 분석 테스트\"/>\n        <meta name=\"description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" data-react-helmet=\"true\"/>\n        <link rel=\"main-url\" href={window.location.href}/>\n          \n        {/* <!-- Open Graph / Facebook --> */}\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:url\" content=\"https://kapable.github.io/\"/>\n        <meta property=\"og:title\" content=\"취향 분석 테스트\"/>\n        <meta property=\"og:description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\"/>\n        <meta property=\"og:image\" content=\"https://dl.dropboxusercontent.com/s/n9pr74fbv6gdiub/main-header.png?dl=0\"/>\n        <meta property=\"og:image:alt\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" />\n\n        {/* <!-- Twitter --> */}\n        <meta property=\"twitter:card\" content=\"summary_large_image\"/>\n        <meta property=\"twitter:url\" content=\"https://kapable.github.io/\"/>\n        <meta property=\"twitter:title\" content=\"취향 분석 테스트\"/>\n        <meta property=\"twitter:description\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\"/>\n        <meta property=\"twitter:image\" content=\"https://dl.dropboxusercontent.com/s/n9pr74fbv6gdiub/main-header.png?dl=0\"/>\n        <meta property=\"twitter:image:alt\" content=\"진짜 내 모습을 찾아가는 취향 분석 테스트 모음\" />\n      </Helmet>\n\n      {this.reloadPage()}\n\n      {/* Kakao Adfit Upper */}\n      <ins className=\"kakao_ad_area\" style={{display:\"none\"}}\n      data-ad-unit    = \"DAN-2heOjnHUdZLjBuFC\" \n      data-ad-width   = \"320\" \n      data-ad-height  = \"100\"></ins> \n      <ScriptTag type=\"text/javascript\" src=\"//t1.daumcdn.net/kas/static/ba.min.js\" async></ScriptTag>\n\n      <Router basename='/kapable.github.io/'>\n        <ScrollToTop>\n          <Switch>\n            {/* \"Main\" page */}\n            <Route path='/' exact>\n                <MainPage/>\n            </Route>\n\n            {/* go to \"Intro\" page */}\n            {this.state.all_tests_url.map((item)=>(\n              <Route\n                path={item}\n                component={() => <Intro test={item.replaceAll('/','')}/>}\n                key={item.replaceAll('/','')}\n                exact\n              />\n            ))}\n\n            {/* go to \"Result to Start\" page */}\n            <Route path={this.state.all_tests_result_url} component={ResultToIntro} exact/>\n\n            {/* go to \"Each Result contents\" page */}\n            {this.state.final_render_routes.map((item)=>(\n              <Route\n                path={'/'+item[1]+'/'+this.state.result_route+item[0]}\n                component={Result}\n                key={item[1]+'_'+item[0]} exact/>\n            ))}\n          </Switch>\n        </ScrollToTop>\n      </Router>\n\n      {/* Kakao Adfit footer */}\n      <ins className=\"kakao_ad_area\" style={{display:\"none\"}} \n      data-ad-unit    = \"DAN-rgfAOJhp6Faz2JFX\" \n      data-ad-width   = \"300\" \n      data-ad-height  = \"250\"></ins> \n      <ScriptTag type=\"text/javascript\" src=\"//t1.daumcdn.net/kas/static/ba.min.js\" async></ScriptTag>\n\n      {/* footer */}\n      <div className=\"intro-footer\">\n          {/* <p>MAKER - 케이테스트</p> */}\n          <h5>광고 및 후원 문의</h5>\n          <p>soumy21@naver.com</p>\n          <p>Disclaimer: All content is provided for fun and entertainment purposes only</p>\n          <p>©Soumy21 All Rights Reserved. 2021.</p>\n      </div>\n    </Fragment>\n    )\n  }\n  \n}\n\n\nexport default withRouter(App);\n\n// <<in package.json>>\n// below just use github domain\n// \"scripts\": {\n//   \"start\": \"react-scripts start\",\n//   \"build\": \"react-scripts build\",\n//   \"test\": \"react-scripts test\",\n//   \"eject\": \"react-scripts eject\",\n//   \"predeploy\": \"npm run build\",\n//   \"deploy\": \"gh-pages -d build\"\n// },\n\n// below use custom domain\n// \"scripts\": {\n//   \"start\": \"react-scripts start\",\n//   \"build\": \"react-scripts build\",\n//   \"test\": \"react-scripts test\",\n//   \"eject\": \"react-scripts eject\",\n//   \"cname\": \"echo test.k-test.net > build/CNAME\",\n//   \"nojekyll\": \"echo > build/.nojekyll\",\n//   \"predeploy\": \"npm run build && npm run cname && npm run nojekyll\",\n//   \"deploy\": \"gh-pages --add --dotfiles -d build\"\n// },\n\n// <!-- Google Adsense Script -->\n{/* <script data-ad-client=\"ca-pub-7365638386197005\" async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script> */}",["62","63"],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Result.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Quiz.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Question.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/index.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/reportWebVitals.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/MainPage.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ResultToIntro.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/api/TESTS.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Intro.js",["64"],"import React, { Component, Fragment } from 'react';\nimport Quiz from './Quiz'\nimport Result from './Result'\nimport Loading from './Loading'\nimport BirthdayCalc from './BirthdayCalc'\nimport TESTS from '../api/TESTS'\nimport { BrowserRouter as Router, Redirect, Route, withRouter } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Typist from 'react-typist';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Helmet } from 'react-helmet';\n\nclass Intro extends Component {\n    constructor(props){\n        super(props)\n        let _current_test = [];\n        let i = 0;\n        while (i<TESTS.length) {\n            if(TESTS[i].info.mainUrl === this.props.test){\n                _current_test = TESTS[i]\n                break\n            }\n            i = i + 1\n        }\n        // create answer option object for counting each question's answer\n        var _answer_type_obj = {};\n        var j = 0;\n        for(j=0;j<_current_test.questions[0].answers.length;j++) {\n            _answer_type_obj[_current_test.questions[0].answers[j].type] = 0;\n        };\n        // for randomizing participants number(range)\n        let min = 1402052;\n        let max = 2000000;\n        \n        this.state = {\n            mode:'intro',\n            current_test:_current_test,\n            qAndA:_current_test.questions,\n            scoreType:_current_test.info.scoreType,\n            answer_type_obj:_answer_type_obj, // < ------------- for calculating type += 1\n            quizNumber:0,\n            counted_score:0, // < ------------- for calculating scores\n            result_url:'/result/',\n            quiz_url:window.location.href,\n            participants:Math.trunc((Math.random() * (max - min) + min)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        }\n        this._onStartButtonClick = this._onStartButtonClick.bind(this);\n        this._onMainButtonClick = this._onMainButtonClick.bind(this);\n    }\n\n    _onStartButtonClick(){\n        this.setState({\n            mode:'quiz'\n        })\n    }\n\n    _onMainButtonClick(){\n        this.setState({\n            mode:'main'\n        })\n    }\n\n    introPageRender(){\n        \n        let _mainTitle = this.state.current_test.info.mainTitle;\n        let _subTitle = this.state.current_test.info.subTitle;\n        \n        return (\n            <div className=\"intro container\">\n                <h1 className='title'>{_mainTitle}</h1>  \n                <h5 className='sub-title'>{_subTitle}</h5>\n                <div className='btn-positioner'></div>\n                {/* <Typist className=\"start-btn-participants\">\n                    현재 총 {this.state.participants}명이 참여했어요.\n                </Typist> */}\n                <div className=\"start-btn-div\">\n                    <Button\n                        onClick={this._onStartButtonClick}\n                        variant=\"dark\"\n                        size=\"lg\"\n                        className=\"start-btn\"\n                        bsPrefix=\"btn\"\n                    >시작하기\n                    </Button>\n                </div>\n                <div className=\"test-intro-with-friend\">\n                    <h5>친구들과 함께 해보기</h5>\n                    <CopyToClipboard text={this.state.quiz_url}>\n                        <Button \n                            className=\"test-intro-with-friend-btn\"\n                            variant=\"dark\"\n                            onClick={function(){alert(\"링크가 복사됐어요!\")}}>🔗 테스트 링크 복사</Button>\n                    </CopyToClipboard>\n                </div>\n                <div className=\"test-intro-to-main\">\n                    <Button\n                        onClick={this._onMainButtonClick}\n                        variant=\"dark\"\n                        className=\"test-intro-to-main-btn\"\n                        bsPrefix=\"btn\"\n                    >⇦ 다른 테스트 하러 뒤로가기</Button>\n                </div>\n            </div>\n        );\n    }\n\n    resultCaculator(){\n        if (this.state.scoreType === \"numberScoring\" || this.state.scoreType === \"birthdayCalc\"){\n            let final_score = this.state.counted_score;\n            for (let k = 0; k < this.state.current_test.results.length; k++){\n                if(this.state.current_test.results[k].score_range.includes(final_score)){\n                    return this.state.current_test.results[k];\n                }\n            }\n        } else if (this.state.scoreType === \"typeCounting\") {\n            let final_result = this.state.answer_type_obj;\n            let keys = Object.keys(final_result);\n            let max = final_result[keys[0]];\n            let max_keys = [];\n            for (let z = 0 ; z < keys.length; z++) {\n                let value = final_result[keys[z]];\n                if (value > max) max = value\n            }\n            for (let key of keys) {\n                if(final_result[key] === max) {\n                    max_keys.push(key)\n                }\n            }\n            for (let z=0;z<this.state.current_test.results.length;z++){\n                if(max_keys[0] === this.state.current_test.results[z].type){\n                    return this.state.current_test.results[z]\n                }\n            }\n        } \n        \n    }\n    quizPageRender(){\n        if(this.state.mode === \"quiz\"){\n            // when the type is cummulative number scoring\n            if (this.state.scoreType === \"numberScoring\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _score, _mode) {\n                    // e.preventDefault();\n                    let _scores = this.state.counted_score + Number(_score)\n                    this.setState({\n                        quizNumber:_quizNum,\n                        counted_score:_scores,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return(\n                    _page\n                ) \n            // when the type is each type counting\n            } else if (this.state.scoreType === \"typeCounting\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _answer, _mode) {\n                    var _answer_obj = Object.assign({}, this.state.answer_type_obj);\n                    _answer_obj[_answer] = _answer_obj[_answer] + 1;\n                    this.setState({\n                        quizNumber:_quizNum,\n                        answer_type_obj:_answer_obj,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return _page\n            } else if (this.state.scoreType === \"birthdayCalc\"){\n                let _page = <BirthdayCalc\n                onChangeMode={\n                    function(_final_result, _mode) {\n                    this.setState({\n                        counted_score:_final_result,\n                        mode:_mode\n                    })\n                }.bind(this)}></BirthdayCalc>\n                return _page\n            }\n            return this._page\n        } \n    }\n\n    lodingPageRender(){\n        return(\n            <div className=\"loading-upper\">\n                <Loading />\n                {setTimeout(function(){\n                    this.setState({mode:\"result\"})\n                }.bind(this), 2700)}\n            </div>\n        )\n    }\n\n    resultPageRender(){\n        // go to result page\n        let result_contents = this.resultCaculator();\n        let final_score_query = result_contents.query // <----------------query export\n        \n        return(\n            <Router basename={'/kapable.github.io/'+this.state.current_test.info.mainUrl}>\n                <Route path={this.state.result_url+final_score_query} component={Result}/>\n                <Redirect to={this.state.result_url+final_score_query} />\n            </Router>\n        )   \n    }\n\n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"intro\") {\n            _page = this.introPageRender()\n        } else if (this.state.mode === \"quiz\") {\n            _page =  this.quizPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.props.history.push('/')\n        } else if (this.state.mode === \"loading\") {\n            _page = this.lodingPageRender()\n        } else if (this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        }\n        return _page\n    }\n    \n    render(){\n        return (\n            <Fragment>\n                <Helmet>\n                    {/* <!-- Primary Meta Tags --> */}\n                    <title>{this.state.current_test.info.mainTitle}-K테스트</title>\n                    <meta name=\"title\" content={this.state.current_test.info.mainTitle+'-K테스트'}/>\n                    <meta name=\"description\" content={this.state.current_test.info.subTitle} data-react-helmet=\"true\"/>\n                    <link rel=\"main-url\" href={this.state.quiz_url}/>\n                    \n                    {/* <!-- Open Graph / Facebook --> */}\n                    <meta property=\"og:type\" content=\"website\"/>\n                    <meta property=\"og:url\" content={this.state.quiz_url}/>\n                    <meta property=\"og:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"og:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"og:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"og:image:alt\" content={this.state.current_test.info.mainTitle} />\n\n                    {/* <!-- Twitter --> */}\n                    <meta property=\"twitter:card\" content=\"summary_large_image\"/>\n                    <meta property=\"twitter:url\" content={this.state.quiz_url}/>\n                    <meta property=\"twitter:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"twitter:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"twitter:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"twitter:image:alt\" content={this.state.current_test.info.mainTitle} />\n                </Helmet>\n                {this.pageRenderer()}\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Intro);","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Loading.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/QuestionCount.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ScrollToTop.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/BirthdayCalc.js",[],{"ruleId":"65","severity":1,"message":"66","line":170,"column":1,"nodeType":"67","messageId":"68","endLine":170,"endColumn":142},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":14},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Typist' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]