[{"/Users/seeyonglee/my_own_project/kapable/personality-test/src/App.js":"1","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Result.js":"2","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Quiz.js":"3","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Question.js":"4","/Users/seeyonglee/my_own_project/kapable/personality-test/src/index.js":"5","/Users/seeyonglee/my_own_project/kapable/personality-test/src/reportWebVitals.js":"6","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/MainPage.js":"7","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ResultToIntro.js":"8","/Users/seeyonglee/my_own_project/kapable/personality-test/src/api/TESTS.js":"9","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Intro.js":"10","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Loading.js":"11","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/QuestionCount.js":"12","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ScrollToTop.js":"13","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/BirthdayCalc.js":"14"},{"size":6292,"mtime":1610426851943,"results":"15","hashOfConfig":"16"},{"size":5235,"mtime":1609931002685,"results":"17","hashOfConfig":"16"},{"size":4184,"mtime":1609302679789,"results":"18","hashOfConfig":"16"},{"size":280,"mtime":1609826662541,"results":"19","hashOfConfig":"16"},{"size":597,"mtime":1609868293886,"results":"20","hashOfConfig":"16"},{"size":362,"mtime":1609818205821,"results":"21","hashOfConfig":"16"},{"size":1235,"mtime":1609905246453,"results":"22","hashOfConfig":"16"},{"size":1622,"mtime":1609931008671,"results":"23","hashOfConfig":"16"},{"size":84343,"mtime":1610365350874,"results":"24","hashOfConfig":"16"},{"size":10642,"mtime":1610363402946,"results":"25","hashOfConfig":"16"},{"size":600,"mtime":1608637825624,"results":"26","hashOfConfig":"16"},{"size":605,"mtime":1608700393134,"results":"27","hashOfConfig":"16"},{"size":333,"mtime":1610284728847,"results":"28","hashOfConfig":"16"},{"size":4949,"mtime":1610370902302,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"136bu7d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/seeyonglee/my_own_project/kapable/personality-test/src/App.js",["60"],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Result.js",[],["61","62"],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Quiz.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Question.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/index.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/reportWebVitals.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/MainPage.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ResultToIntro.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/api/TESTS.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Intro.js",["63"],"import React, { Component, Fragment } from 'react';\nimport Quiz from './Quiz'\nimport Result from './Result'\nimport Loading from './Loading'\nimport BirthdayCalc from './BirthdayCalc'\nimport TESTS from '../api/TESTS'\nimport { BrowserRouter as Router, Redirect, Route, withRouter } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport¬†Typist¬†from¬†'react-typist';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { Helmet } from 'react-helmet';\n\nclass Intro extends Component {\n    constructor(props){\n        super(props)\n        let _current_test = [];\n        let i = 0;\n        while (i<TESTS.length) {\n            if(TESTS[i].info.mainUrl === this.props.test){\n                _current_test = TESTS[i]\n                break\n            }\n            i = i + 1\n        }\n        // create answer option object for counting each question's answer\n        var _answer_type_obj = {};\n        var j = 0;\n        for(j=0;j<_current_test.questions[0].answers.length;j++) {\n            _answer_type_obj[_current_test.questions[0].answers[j].type] = 0;\n        };\n        // for randomizing participants number(range)\n        let min = 1402052;\n        let max = 2000000;\n        \n        this.state = {\n            mode:'intro',\n            current_test:_current_test,\n            qAndA:_current_test.questions,\n            scoreType:_current_test.info.scoreType,\n            answer_type_obj:_answer_type_obj, // < ------------- for calculating type += 1\n            quizNumber:0,\n            counted_score:0, // < ------------- for calculating scores\n            result_url:'/result/',\n            quiz_url:window.location.href,\n            participants:Math.trunc((Math.random() * (max - min) + min)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        }\n        this._onStartButtonClick = this._onStartButtonClick.bind(this);\n        this._onMainButtonClick = this._onMainButtonClick.bind(this);\n    }\n\n    _onStartButtonClick(){\n        this.setState({\n            mode:'quiz'\n        })\n    }\n\n    _onMainButtonClick(){\n        this.setState({\n            mode:'main'\n        })\n    }\n\n    introPageRender(){\n        \n        let _mainTitle = this.state.current_test.info.mainTitle;\n        let _subTitle = this.state.current_test.info.subTitle;\n        \n        return (\n            <div className=\"intro container\">\n                <h1 className='title'>{_mainTitle}</h1>  \n                <h5 className='sub-title'>{_subTitle}</h5>\n                <div className='btn-positioner'></div>\n                {/* <Typist className=\"start-btn-participants\">\n                    ÌòÑÏû¨ Ï¥ù {this.state.participants}Î™ÖÏù¥ Ï∞∏Ïó¨ÌñàÏñ¥Ïöî.\n                </Typist> */}\n                <div className=\"start-btn-div\">\n                    <Button\n                        onClick={this._onStartButtonClick}\n                        variant=\"dark\"\n                        size=\"lg\"\n                        className=\"start-btn\"\n                        bsPrefix=\"btn\"\n                    >ÏãúÏûëÌïòÍ∏∞\n                    </Button>\n                </div>\n                <div className=\"test-intro-with-friend\">\n                    <h5>ÏπúÍµ¨Îì§Í≥º Ìï®Íªò Ìï¥Î≥¥Í∏∞</h5>\n                    <CopyToClipboard text={this.state.quiz_url}>\n                        <Button \n                            className=\"test-intro-with-friend-btn\"\n                            variant=\"dark\"\n                            onClick={function(){alert(\"ÎßÅÌÅ¨Í∞Ä Î≥µÏÇ¨ÎêêÏñ¥Ïöî!\")}}>üîó ÌÖåÏä§Ìä∏ ÎßÅÌÅ¨ Î≥µÏÇ¨</Button>\n                    </CopyToClipboard>\n                </div>\n                <div className=\"test-intro-to-main\">\n                    <Button\n                        onClick={this._onMainButtonClick}\n                        variant=\"dark\"\n                        className=\"test-intro-to-main-btn\"\n                        bsPrefix=\"btn\"\n                    >‚á¶ Îã§Î•∏ ÌÖåÏä§Ìä∏ ÌïòÎü¨ Îí§Î°úÍ∞ÄÍ∏∞</Button>\n                </div>\n            </div>\n        );\n    }\n\n    resultCaculator(){\n        if (this.state.scoreType === \"numberScoring\" || this.state.scoreType === \"birthdayCalc\"){\n            let final_score = this.state.counted_score;\n            for (let k = 0; k < this.state.current_test.results.length; k++){\n                if(this.state.current_test.results[k].score_range.includes(final_score)){\n                    return this.state.current_test.results[k];\n                }\n            }\n        } else if (this.state.scoreType === \"typeCounting\") {\n            let final_result = this.state.answer_type_obj;\n            let keys = Object.keys(final_result);\n            let max = final_result[keys[0]];\n            let max_keys = [];\n            for (let z = 0 ; z < keys.length; z++) {\n                let value = final_result[keys[z]];\n                if (value > max) max = value\n            }\n            for (let key of keys) {\n                if(final_result[key] === max) {\n                    max_keys.push(key)\n                }\n            }\n            for (let z=0;z<this.state.current_test.results.length;z++){\n                if(max_keys[0] === this.state.current_test.results[z].type){\n                    return this.state.current_test.results[z]\n                }\n            }\n        } \n        \n    }\n    quizPageRender(){\n        if(this.state.mode === \"quiz\"){\n            // when the type is cummulative number scoring\n            if (this.state.scoreType === \"numberScoring\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _score, _mode) {\n                    // e.preventDefault();\n                    let _scores = this.state.counted_score + Number(_score)\n                    this.setState({\n                        quizNumber:_quizNum,\n                        counted_score:_scores,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return(\n                    _page\n                ) \n            // when the type is each type counting\n            } else if (this.state.scoreType === \"typeCounting\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _answer, _mode) {\n                    var _answer_obj = Object.assign({}, this.state.answer_type_obj);\n                    _answer_obj[_answer] = _answer_obj[_answer] + 1;\n                    this.setState({\n                        quizNumber:_quizNum,\n                        answer_type_obj:_answer_obj,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return _page\n            } else if (this.state.scoreType === \"birthdayCalc\"){\n                let _page = <BirthdayCalc\n                onChangeMode={\n                    function(_final_result, _mode) {\n                    this.setState({\n                        counted_score:_final_result,\n                        mode:_mode\n                    })\n                }.bind(this)}></BirthdayCalc>\n                return _page\n            }\n            return this._page\n        } \n    }\n\n    lodingPageRender(){\n        return(\n            <div className=\"loading-upper\">\n                <Loading />\n                {setTimeout(function(){\n                    this.setState({mode:\"result\"})\n                }.bind(this), 2700)}\n            </div>\n        )\n    }\n\n    resultPageRender(){\n        // go to result page\n        let result_contents = this.resultCaculator();\n        let final_score_query = result_contents.query // <----------------query export\n        \n        return(\n            <Router basename={'/kapable.github.io/'+this.state.current_test.info.mainUrl}>\n                <Route path={this.state.result_url+final_score_query} component={Result}/>\n                <Redirect to={this.state.result_url+final_score_query} />\n            </Router>\n        )   \n    }\n\n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"intro\") {\n            _page = this.introPageRender()\n        } else if (this.state.mode === \"quiz\") {\n            _page =  this.quizPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.props.history.push('/')\n        } else if (this.state.mode === \"loading\") {\n            _page = this.lodingPageRender()\n        } else if (this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        }\n        return _page\n    }\n    \n    render(){\n        return (\n            <Fragment>\n                <Helmet>\n                    {/* <!-- Primary Meta Tags --> */}\n                    <title>{this.state.current_test.info.mainTitle}-KÌÖåÏä§Ìä∏</title>\n                    <meta name=\"title\" content={this.state.current_test.info.mainTitle+'-KÌÖåÏä§Ìä∏'}/>\n                    <meta name=\"description\" content={this.state.current_test.info.subTitle} data-react-helmet=\"true\"/>\n                    <link rel=\"main-url\" href={this.state.quiz_url}/>\n                    \n                    {/* <!-- Open Graph / Facebook --> */}\n                    <meta property=\"og:type\" content=\"website\"/>\n                    <meta property=\"og:url\" content={this.state.quiz_url}/>\n                    <meta property=\"og:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"og:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"og:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"og:image:alt\" content={this.state.current_test.info.mainTitle} />\n\n                    {/* <!-- Twitter --> */}\n                    <meta property=\"twitter:card\" content=\"summary_large_image\"/>\n                    <meta property=\"twitter:url\" content={this.state.quiz_url}/>\n                    <meta property=\"twitter:title\" content={this.state.current_test.info.mainTitle}/>\n                    <meta property=\"twitter:description\" content={this.state.current_test.info.subTitle}/>\n                    <meta property=\"twitter:image\" content={this.state.current_test.info.mainImage}/>\n                    <meta property=\"twitter:image:alt\" content={this.state.current_test.info.mainTitle} />\n                </Helmet>\n                {this.pageRenderer()}\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Intro);","/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/Loading.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/QuestionCount.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/ScrollToTop.js",[],"/Users/seeyonglee/my_own_project/kapable/personality-test/src/components/BirthdayCalc.js",[],{"ruleId":"64","severity":1,"message":"65","line":170,"column":1,"nodeType":"66","messageId":"67","endLine":170,"endColumn":142},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":14},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Typist' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]